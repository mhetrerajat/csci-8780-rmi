/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package rmiproject;

import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.rmi.RemoteException;

class RemoteStringArrayTest {

    public RemoteStringArray remoteArr;

    @BeforeEach
    public void setUp() throws RemoteException {
        remoteArr = new RemoteStringArray(5);
        remoteArr.insertArrayElement(0, "a");
        remoteArr.insertArrayElement(1, "b");
    }

    @Test
    public void testRequestReadLockFirstTimeNotLocked() throws RemoteException {
        // Stub behavior: Simulate a successful lock acquisition (not locked before)

        // Verify that the lock was acquired successfully
        assertTrue(remoteArr.requestReadLock(0, 1));
    }


    @Test
    public void testRequestReadLockAlreadyLockedBySameClient() throws RemoteException {
        // Stub behavior: Simulate a successful lock acquisition (already locked by the same client)

        // Verify that the lock was acquired successfully
        remoteArr.requestReadLock(0, 1); // already acquired lock in past
        assertTrue(remoteArr.requestReadLock(0, 1));
    }

    @Test
    public void testRequestReadLockAlreadyLockedByOtherClient() throws RemoteException {
        // Verify that the lock was acquired successfully
        remoteArr.requestReadLock(0, 1); // lock acquired by client 1
        assertTrue(remoteArr.requestReadLock(0, 2)); // allow multiple read locks
    }

}
