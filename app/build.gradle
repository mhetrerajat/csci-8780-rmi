/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.adarshr.test-logger' version '3.2.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation "org.mockito:mockito-core:3.12.4"

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showOnlySlow false
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
    logLevel 'lifecycle'
}

application {
    // Define the main class for the application.
    mainClass = 'rmiproject.RMIClientMain'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// task to run the RMI Client
tasks.register('runRMIClient', JavaExec) {
    description = 'Run the RMI Client'
    mainClass = 'rmiproject.RMIClientMain'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    standardOutput = System.out
    errorOutput = System.err
}

// task to run the RMI Server
tasks.register('runRMIServer', JavaExec) {
    description = 'Run the RMI Server'
    mainClass = 'rmiproject.RMIServerMain'
    classpath = sourceSets.main.runtimeClasspath

    // Delete reference to exported remote object after all client dies
    systemProperty 'java.rmi.dgc.leaseValue', '30000'
}
